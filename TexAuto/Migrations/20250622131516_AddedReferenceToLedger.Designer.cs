// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TexAuto.Data;

#nullable disable

namespace TexAuto.Migrations
{
    [DbContext(typeof(TexAutoContext))]
    [Migration("20250622131516_AddedReferenceToLedger")]
    partial class AddedReferenceToLedger
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project.Models.Domain.Accounting.AccountingVoucherEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DrCr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsTaxLine")
                        .HasColumnType("bit");

                    b.Property<string>("Ledger")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineNo")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VoucherId");

                    b.ToTable("AccountingVoucherEntries");
                });

            modelBuilder.Entity("Project.Models.Domain.Accounting.AccountingVoucherHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAuto")
                        .HasColumnType("bit");

                    b.Property<string>("LinkedModule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkedRecordId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Narration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyLedger")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalCredit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalDebit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("VoucherDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoucherType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccountingVoucherHeaders");
                });

            modelBuilder.Entity("Project.Models.Domain.Creation.BaleDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BalePurchaseId")
                        .HasColumnType("int");

                    b.Property<decimal>("MoisturePercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetWeightKg")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("NumberOfBales")
                        .HasColumnType("int");

                    b.Property<decimal>("RatePerKg")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BalePurchaseId");

                    b.ToTable("BaleDetails");
                });

            modelBuilder.Entity("Project.Models.Domain.Creation.BalePurchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AgentId")
                        .HasColumnType("int");

                    b.Property<int>("BaleOut")
                        .HasColumnType("int");

                    b.Property<int>("BaleTypeId")
                        .HasColumnType("int");

                    b.Property<int>("BaleUsed")
                        .HasColumnType("int");

                    b.Property<DateTime>("BillDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BillNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CgstPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CommissionPerBale")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DeliveryAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DueDays")
                        .HasColumnType("int");

                    b.Property<decimal>("FreightCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GrossWeightKg")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IgstPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("InwardDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InwardNo")
                        .HasColumnType("int");

                    b.Property<int?>("LotNo")
                        .HasColumnType("int");

                    b.Property<decimal>("NetWeightKg")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PurchaseAccountId")
                        .HasColumnType("int");

                    b.Property<string>("PurchaseType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RoundOff")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SgstPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("TareWeightKg")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TcsAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TdsPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TransportVendorId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnloadingCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UnloadingManId")
                        .HasColumnType("int");

                    b.Property<string>("WeighbridgeSlipNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("BaleTypeId");

                    b.HasIndex("PurchaseAccountId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TransportVendorId");

                    b.HasIndex("UnloadingManId");

                    b.ToTable("BalePurchases");
                });

            modelBuilder.Entity("Project.Models.Domain.Masters.GroupMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AffectsInventory")
                        .HasColumnType("bit");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("NatureOfGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UnderGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnderGroupId");

                    b.ToTable("GroupMaster");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AffectsInventory = false,
                            GroupName = "Capital Account",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Capital"
                        },
                        new
                        {
                            Id = 2,
                            AffectsInventory = false,
                            GroupName = "Partner’s Capital",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Capital",
                            UnderGroupId = 1
                        },
                        new
                        {
                            Id = 3,
                            AffectsInventory = false,
                            GroupName = "Reserves & Surplus",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Capital",
                            UnderGroupId = 1
                        },
                        new
                        {
                            Id = 4,
                            AffectsInventory = false,
                            GroupName = "Fixed Assets",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Asset"
                        },
                        new
                        {
                            Id = 5,
                            AffectsInventory = false,
                            GroupName = "Building",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Asset",
                            UnderGroupId = 4
                        },
                        new
                        {
                            Id = 6,
                            AffectsInventory = false,
                            GroupName = "Machinery",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Asset",
                            UnderGroupId = 4
                        },
                        new
                        {
                            Id = 7,
                            AffectsInventory = false,
                            GroupName = "Vehicles",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Asset",
                            UnderGroupId = 4
                        },
                        new
                        {
                            Id = 8,
                            AffectsInventory = false,
                            GroupName = "Furniture & Fixtures",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Asset",
                            UnderGroupId = 4
                        },
                        new
                        {
                            Id = 9,
                            AffectsInventory = false,
                            GroupName = "Computer Equipment",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Asset",
                            UnderGroupId = 4
                        },
                        new
                        {
                            Id = 10,
                            AffectsInventory = false,
                            GroupName = "Investments",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Asset"
                        },
                        new
                        {
                            Id = 11,
                            AffectsInventory = false,
                            GroupName = "Loans (Liability)",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Liability"
                        },
                        new
                        {
                            Id = 12,
                            AffectsInventory = false,
                            GroupName = "Secured Loans",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Liability",
                            UnderGroupId = 11
                        },
                        new
                        {
                            Id = 13,
                            AffectsInventory = false,
                            GroupName = "Bank Loans",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Liability",
                            UnderGroupId = 12
                        },
                        new
                        {
                            Id = 14,
                            AffectsInventory = false,
                            GroupName = "Vehicle Loans",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Liability",
                            UnderGroupId = 12
                        },
                        new
                        {
                            Id = 15,
                            AffectsInventory = false,
                            GroupName = "Unsecured Loans",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Liability",
                            UnderGroupId = 11
                        },
                        new
                        {
                            Id = 16,
                            AffectsInventory = false,
                            GroupName = "Current Liabilities",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Liability"
                        },
                        new
                        {
                            Id = 17,
                            AffectsInventory = false,
                            GroupName = "Sundry Creditors",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Liability",
                            UnderGroupId = 16
                        },
                        new
                        {
                            Id = 18,
                            AffectsInventory = false,
                            GroupName = "Duties & Taxes",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Liability",
                            UnderGroupId = 16
                        },
                        new
                        {
                            Id = 19,
                            AffectsInventory = false,
                            GroupName = "GST Payable",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Liability",
                            UnderGroupId = 18
                        },
                        new
                        {
                            Id = 20,
                            AffectsInventory = false,
                            GroupName = "TDS Payable",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Liability",
                            UnderGroupId = 18
                        },
                        new
                        {
                            Id = 21,
                            AffectsInventory = false,
                            GroupName = "TCS Payable",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Liability",
                            UnderGroupId = 18
                        },
                        new
                        {
                            Id = 22,
                            AffectsInventory = false,
                            GroupName = "Outstanding Expenses",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Liability",
                            UnderGroupId = 16
                        },
                        new
                        {
                            Id = 23,
                            AffectsInventory = false,
                            GroupName = "Advance from Customers",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Liability",
                            UnderGroupId = 16
                        },
                        new
                        {
                            Id = 24,
                            AffectsInventory = false,
                            GroupName = "Provisions",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Liability"
                        },
                        new
                        {
                            Id = 25,
                            AffectsInventory = false,
                            GroupName = "Salary Payable",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Liability",
                            UnderGroupId = 24
                        },
                        new
                        {
                            Id = 26,
                            AffectsInventory = false,
                            GroupName = "Bonus Payable",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Liability",
                            UnderGroupId = 24
                        },
                        new
                        {
                            Id = 27,
                            AffectsInventory = false,
                            GroupName = "Bank Accounts",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Asset"
                        },
                        new
                        {
                            Id = 28,
                            AffectsInventory = false,
                            GroupName = "Cash-in-Hand",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Asset"
                        },
                        new
                        {
                            Id = 29,
                            AffectsInventory = false,
                            GroupName = "Cash Office",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Asset",
                            UnderGroupId = 28
                        },
                        new
                        {
                            Id = 30,
                            AffectsInventory = false,
                            GroupName = "Petty Cash",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Asset",
                            UnderGroupId = 28
                        },
                        new
                        {
                            Id = 31,
                            AffectsInventory = false,
                            GroupName = "Deposits (Assets)",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Asset"
                        },
                        new
                        {
                            Id = 32,
                            AffectsInventory = false,
                            GroupName = "Rent Deposit",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Asset",
                            UnderGroupId = 31
                        },
                        new
                        {
                            Id = 33,
                            AffectsInventory = false,
                            GroupName = "Security Deposit",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Asset",
                            UnderGroupId = 31
                        },
                        new
                        {
                            Id = 34,
                            AffectsInventory = false,
                            GroupName = "Current Assets",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Asset"
                        },
                        new
                        {
                            Id = 35,
                            AffectsInventory = false,
                            GroupName = "Sundry Debtors",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Asset",
                            UnderGroupId = 34
                        },
                        new
                        {
                            Id = 36,
                            AffectsInventory = false,
                            GroupName = "Advance to Suppliers",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Asset",
                            UnderGroupId = 34
                        },
                        new
                        {
                            Id = 37,
                            AffectsInventory = false,
                            GroupName = "Prepaid Expenses",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Asset",
                            UnderGroupId = 34
                        },
                        new
                        {
                            Id = 38,
                            AffectsInventory = false,
                            GroupName = "Input GST Credit",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Asset",
                            UnderGroupId = 34
                        },
                        new
                        {
                            Id = 39,
                            AffectsInventory = false,
                            GroupName = "TDS Receivable",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Asset",
                            UnderGroupId = 34
                        },
                        new
                        {
                            Id = 40,
                            AffectsInventory = true,
                            GroupName = "Stock-in-Hand",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Asset"
                        },
                        new
                        {
                            Id = 41,
                            AffectsInventory = true,
                            GroupName = "Yarn",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Asset",
                            UnderGroupId = 40
                        },
                        new
                        {
                            Id = 42,
                            AffectsInventory = true,
                            GroupName = "Cotton Bale",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Asset",
                            UnderGroupId = 40
                        },
                        new
                        {
                            Id = 43,
                            AffectsInventory = true,
                            GroupName = "Wastage",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Asset",
                            UnderGroupId = 40
                        },
                        new
                        {
                            Id = 44,
                            AffectsInventory = false,
                            GroupName = "Purchase Accounts",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Expense"
                        },
                        new
                        {
                            Id = 45,
                            AffectsInventory = false,
                            GroupName = "Yarn Purchase A/C",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Expense",
                            UnderGroupId = 44
                        },
                        new
                        {
                            Id = 46,
                            AffectsInventory = false,
                            GroupName = "Bale Purchase A/C",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Expense",
                            UnderGroupId = 44
                        },
                        new
                        {
                            Id = 47,
                            AffectsInventory = false,
                            GroupName = "Packing Material Purchase",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Expense",
                            UnderGroupId = 44
                        },
                        new
                        {
                            Id = 48,
                            AffectsInventory = false,
                            GroupName = "Sales Accounts",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Income"
                        },
                        new
                        {
                            Id = 49,
                            AffectsInventory = false,
                            GroupName = "Yarn Sales",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Income",
                            UnderGroupId = 48
                        },
                        new
                        {
                            Id = 50,
                            AffectsInventory = false,
                            GroupName = "Bale Sales",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Income",
                            UnderGroupId = 48
                        },
                        new
                        {
                            Id = 51,
                            AffectsInventory = false,
                            GroupName = "Waste Sales",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Income",
                            UnderGroupId = 48
                        },
                        new
                        {
                            Id = 52,
                            AffectsInventory = false,
                            GroupName = "Direct Expenses",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Expense"
                        },
                        new
                        {
                            Id = 53,
                            AffectsInventory = false,
                            GroupName = "Freight Inward",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Expense",
                            UnderGroupId = 52
                        },
                        new
                        {
                            Id = 54,
                            AffectsInventory = false,
                            GroupName = "Loading Charges",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Expense",
                            UnderGroupId = 52
                        },
                        new
                        {
                            Id = 55,
                            AffectsInventory = false,
                            GroupName = "Commission Paid",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Expense",
                            UnderGroupId = 52
                        },
                        new
                        {
                            Id = 56,
                            AffectsInventory = false,
                            GroupName = "Transport Charges",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Expense",
                            UnderGroupId = 52
                        },
                        new
                        {
                            Id = 57,
                            AffectsInventory = false,
                            GroupName = "Indirect Expenses",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Expense"
                        },
                        new
                        {
                            Id = 58,
                            AffectsInventory = false,
                            GroupName = "Rent",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Expense",
                            UnderGroupId = 57
                        },
                        new
                        {
                            Id = 59,
                            AffectsInventory = false,
                            GroupName = "Salary",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Expense",
                            UnderGroupId = 57
                        },
                        new
                        {
                            Id = 60,
                            AffectsInventory = false,
                            GroupName = "Office Expenses",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Expense",
                            UnderGroupId = 57
                        },
                        new
                        {
                            Id = 61,
                            AffectsInventory = false,
                            GroupName = "Misc. Expenses",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Expense",
                            UnderGroupId = 57
                        },
                        new
                        {
                            Id = 62,
                            AffectsInventory = false,
                            GroupName = "Indirect Incomes",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Income"
                        },
                        new
                        {
                            Id = 63,
                            AffectsInventory = false,
                            GroupName = "Discount Received",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Income",
                            UnderGroupId = 62
                        },
                        new
                        {
                            Id = 64,
                            AffectsInventory = false,
                            GroupName = "Interest Received",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Income",
                            UnderGroupId = 62
                        },
                        new
                        {
                            Id = 65,
                            AffectsInventory = false,
                            GroupName = "Suspense Account",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Asset"
                        },
                        new
                        {
                            Id = 66,
                            AffectsInventory = false,
                            GroupName = "Branch / Division",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Capital"
                        },
                        new
                        {
                            Id = 67,
                            AffectsInventory = false,
                            GroupName = "Unit 1",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Capital",
                            UnderGroupId = 66
                        },
                        new
                        {
                            Id = 68,
                            AffectsInventory = false,
                            GroupName = "Unit 2",
                            IsActive = true,
                            IsDefault = true,
                            NatureOfGroup = "Capital",
                            UnderGroupId = 66
                        });
                });

            modelBuilder.Entity("Project.Models.Domain.Masters.LedgerMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BalanceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupMasterId")
                        .HasColumnType("int");

                    b.Property<string>("GstNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("IfscCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTdsApplicable")
                        .HasColumnType("bit");

                    b.Property<string>("LedgerType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OpeningBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PanNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("PinCode")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupMasterId");

                    b.ToTable("LedgerMaster");
                });

            modelBuilder.Entity("Project.Models.Domain.Vouchers.StockVoucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAuto")
                        .HasColumnType("bit");

                    b.Property<string>("LinkedModule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkedRecordId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Narration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StockVoucherDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StockVoucherNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StockVoucherType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("StockVouchers");
                });

            modelBuilder.Entity("Project.Models.Domain.Vouchers.StockVoucherLineItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LineNo")
                        .HasColumnType("int");

                    b.Property<string>("LotNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfBales")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RatePerKg")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VoucherId");

                    b.ToTable("StockVoucherLineItems");
                });

            modelBuilder.Entity("TexAuto.Models.Domain.Creation.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Mixing",
                            Name = "Mixing"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Blowroom",
                            Name = "Blowroom"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Carding",
                            Name = "Carding"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Drawing Breaker",
                            Name = "Drawing Breaker"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Drawing Finisher",
                            Name = "Drawing Finisher"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Simplex",
                            Name = "Simplex"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Spinning",
                            Name = "Spinning"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Cone Winding",
                            Name = "Cone Winding"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Autoconer",
                            Name = "Autoconer"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Packing",
                            Name = "Packing"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Sweeping",
                            Name = "Sweeping"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Extra Work",
                            Name = "Extra Work"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Others",
                            Name = "Others"
                        });
                });

            modelBuilder.Entity("TexAuto.Models.Domain.Creation.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CalculationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MachineTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("MachineTypeId");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("TexAuto.Models.Domain.Creation.MachineType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("MachineTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            Name = "Bale Plucker"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 2,
                            Name = "Blowroom"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 3,
                            Name = "Carding"
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 4,
                            Name = "Drawing Breaker"
                        },
                        new
                        {
                            Id = 5,
                            DepartmentId = 5,
                            Name = "Drawing Finisher"
                        },
                        new
                        {
                            Id = 6,
                            DepartmentId = 6,
                            Name = "Simplex"
                        },
                        new
                        {
                            Id = 7,
                            DepartmentId = 7,
                            Name = "Spinning"
                        },
                        new
                        {
                            Id = 8,
                            DepartmentId = 8,
                            Name = "Cone Winding"
                        },
                        new
                        {
                            Id = 9,
                            DepartmentId = 9,
                            Name = "Autoconer"
                        });
                });

            modelBuilder.Entity("TexAuto.Models.Domain.Creation.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("NetWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<string>("SetHank")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Cotton",
                            NetWeight = 0.0m,
                            ProductTypeId = 1,
                            SetHank = ""
                        },
                        new
                        {
                            Id = 2,
                            Name = "Mixed Bale",
                            NetWeight = 0.0m,
                            ProductTypeId = 10,
                            SetHank = ""
                        },
                        new
                        {
                            Id = 3,
                            Name = "Carding Sliver 0.092ne",
                            NetWeight = 0.0m,
                            ProductTypeId = 2,
                            SetHank = "0.092ne"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Breaker Sliver 0.095ne",
                            NetWeight = 0.0m,
                            ProductTypeId = 3,
                            SetHank = "0.095ne"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Finisher Sliver 0.097ne",
                            NetWeight = 0.0m,
                            ProductTypeId = 4,
                            SetHank = "0.097ne"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Roving 0.95ne",
                            NetWeight = 0.0m,
                            ProductTypeId = 5,
                            SetHank = "0.95ne"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Spin Yarn 60s",
                            NetWeight = 0.0m,
                            ProductTypeId = 6,
                            SetHank = "60s"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Autoconed Yarn 1.5Kgs 60s",
                            NetWeight = 1.5m,
                            ProductTypeId = 8,
                            SetHank = "60s"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Winded Yarn 1.5Kgs 60s",
                            NetWeight = 1.5m,
                            ProductTypeId = 7,
                            SetHank = "60s"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Autoconed Bag 60Kgs 60s",
                            NetWeight = 60m,
                            ProductTypeId = 9,
                            SetHank = "60s"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Winded Bag 60Kgs 60s",
                            NetWeight = 60m,
                            ProductTypeId = 9,
                            SetHank = "60s"
                        });
                });

            modelBuilder.Entity("TexAuto.Models.Domain.Creation.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Tradable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 13,
                            Name = "Cotton",
                            Tradable = false
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 3,
                            Name = "Carding Sliver",
                            Tradable = false
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 4,
                            Name = "Breaker Sliver",
                            Tradable = false
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 5,
                            Name = "Finisher Sliver",
                            Tradable = false
                        },
                        new
                        {
                            Id = 5,
                            DepartmentId = 6,
                            Name = "Roving",
                            Tradable = false
                        },
                        new
                        {
                            Id = 6,
                            DepartmentId = 7,
                            Name = "Spin Yarn",
                            Tradable = false
                        },
                        new
                        {
                            Id = 7,
                            DepartmentId = 8,
                            Name = "Winded Yarn",
                            Tradable = false
                        },
                        new
                        {
                            Id = 8,
                            DepartmentId = 9,
                            Name = "Autoconed Yarn",
                            Tradable = false
                        },
                        new
                        {
                            Id = 9,
                            DepartmentId = 10,
                            Name = "Bag",
                            Tradable = false
                        },
                        new
                        {
                            Id = 10,
                            DepartmentId = 1,
                            Name = "Mixed Bale",
                            Tradable = false
                        });
                });

            modelBuilder.Entity("TexAuto.Models.Domain.Creation.WasteType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSellable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ProductionId");

                    b.ToTable("WasteType");
                });

            modelBuilder.Entity("TexAuto.Models.Domain.Entries.Production", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Bale")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Closing")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ClosingHank")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ConeWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DelHank")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<decimal>("ExpectedProduction")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("IdleTime")
                        .HasColumnType("float");

                    b.Property<decimal>("Lap")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<decimal>("Mixing")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NoOfDoffs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OpeningHank")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OpeningKgs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductInId")
                        .HasColumnType("int");

                    b.Property<int>("ProductOutId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("ProductionDate")
                        .HasColumnType("date");

                    b.Property<decimal>("ProductionDrop")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ProductionEfficiency")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductionNumber")
                        .HasColumnType("int");

                    b.Property<double>("RunTime")
                        .HasColumnType("float");

                    b.Property<string>("ShiftDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<double>("ShiftTime")
                        .HasColumnType("float");

                    b.Property<decimal>("SliverBreaks")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalProduction")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("MachineId");

                    b.HasIndex("ProductInId");

                    b.HasIndex("ProductOutId");

                    b.HasIndex("ProductionDate");

                    b.HasIndex("ShiftId");

                    b.ToTable("Productions");
                });

            modelBuilder.Entity("TexAuto.Models.Domain.Entries.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("EffectiveDate")
                        .HasColumnType("date");

                    b.Property<TimeOnly?>("EndTime1")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("EndTime2")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("EndTime3")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("EndTime4")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("StartTime1")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("StartTime2")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("StartTime3")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("StartTime4")
                        .HasColumnType("time");

                    b.Property<int>("TotalShifts")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Shifts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EffectiveDate = new DateOnly(2024, 1, 1),
                            EndTime1 = new TimeOnly(20, 0, 0),
                            EndTime2 = new TimeOnly(8, 0, 0),
                            StartTime1 = new TimeOnly(8, 0, 0),
                            StartTime2 = new TimeOnly(20, 0, 0),
                            TotalShifts = 2
                        });
                });

            modelBuilder.Entity("TexAuto.Models.Domain.Entries.Waste", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("WasteTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("WasteTypeId");

                    b.ToTable("Wastes");
                });

            modelBuilder.Entity("Project.Models.Domain.Accounting.AccountingVoucherEntry", b =>
                {
                    b.HasOne("Project.Models.Domain.Accounting.AccountingVoucherHeader", "VoucherHeader")
                        .WithMany("Entries")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VoucherHeader");
                });

            modelBuilder.Entity("Project.Models.Domain.Creation.BaleDetail", b =>
                {
                    b.HasOne("Project.Models.Domain.Creation.BalePurchase", "BalePurchase")
                        .WithMany("BaleDetails")
                        .HasForeignKey("BalePurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BalePurchase");
                });

            modelBuilder.Entity("Project.Models.Domain.Creation.BalePurchase", b =>
                {
                    b.HasOne("Project.Models.Domain.Masters.LedgerMaster", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentId");

                    b.HasOne("TexAuto.Models.Domain.Creation.Product", "BaleType")
                        .WithMany()
                        .HasForeignKey("BaleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Models.Domain.Masters.LedgerMaster", "PurchaseAccount")
                        .WithMany()
                        .HasForeignKey("PurchaseAccountId");

                    b.HasOne("Project.Models.Domain.Masters.LedgerMaster", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("Project.Models.Domain.Masters.LedgerMaster", "TransportVendor")
                        .WithMany()
                        .HasForeignKey("TransportVendorId");

                    b.HasOne("Project.Models.Domain.Masters.LedgerMaster", "UnloadingMan")
                        .WithMany()
                        .HasForeignKey("UnloadingManId");

                    b.Navigation("Agent");

                    b.Navigation("BaleType");

                    b.Navigation("PurchaseAccount");

                    b.Navigation("Supplier");

                    b.Navigation("TransportVendor");

                    b.Navigation("UnloadingMan");
                });

            modelBuilder.Entity("Project.Models.Domain.Masters.GroupMaster", b =>
                {
                    b.HasOne("Project.Models.Domain.Masters.GroupMaster", "UnderGroup")
                        .WithMany("SubGroups")
                        .HasForeignKey("UnderGroupId");

                    b.Navigation("UnderGroup");
                });

            modelBuilder.Entity("Project.Models.Domain.Masters.LedgerMaster", b =>
                {
                    b.HasOne("Project.Models.Domain.Masters.GroupMaster", "GroupMaster")
                        .WithMany()
                        .HasForeignKey("GroupMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupMaster");
                });

            modelBuilder.Entity("Project.Models.Domain.Vouchers.StockVoucherLineItem", b =>
                {
                    b.HasOne("Project.Models.Domain.Vouchers.StockVoucher", "Voucher")
                        .WithMany("LineItems")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("TexAuto.Models.Domain.Creation.Machine", b =>
                {
                    b.HasOne("TexAuto.Models.Domain.Creation.Department", null)
                        .WithMany("Machines")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("TexAuto.Models.Domain.Creation.MachineType", "MachineType")
                        .WithMany()
                        .HasForeignKey("MachineTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineType");
                });

            modelBuilder.Entity("TexAuto.Models.Domain.Creation.MachineType", b =>
                {
                    b.HasOne("TexAuto.Models.Domain.Creation.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("TexAuto.Models.Domain.Creation.Product", b =>
                {
                    b.HasOne("TexAuto.Models.Domain.Creation.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("TexAuto.Models.Domain.Creation.ProductType", b =>
                {
                    b.HasOne("TexAuto.Models.Domain.Creation.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("TexAuto.Models.Domain.Creation.WasteType", b =>
                {
                    b.HasOne("TexAuto.Models.Domain.Creation.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TexAuto.Models.Domain.Entries.Production", null)
                        .WithMany("Wastes")
                        .HasForeignKey("ProductionId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("TexAuto.Models.Domain.Entries.Production", b =>
                {
                    b.HasOne("TexAuto.Models.Domain.Creation.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TexAuto.Models.Domain.Creation.Machine", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TexAuto.Models.Domain.Creation.Product", "ProductIn")
                        .WithMany()
                        .HasForeignKey("ProductInId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TexAuto.Models.Domain.Creation.Product", "ProductOut")
                        .WithMany()
                        .HasForeignKey("ProductOutId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TexAuto.Models.Domain.Entries.Shift", "Shift")
                        .WithMany()
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Machine");

                    b.Navigation("ProductIn");

                    b.Navigation("ProductOut");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("TexAuto.Models.Domain.Entries.Waste", b =>
                {
                    b.HasOne("TexAuto.Models.Domain.Creation.WasteType", "WasteType")
                        .WithMany()
                        .HasForeignKey("WasteTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WasteType");
                });

            modelBuilder.Entity("Project.Models.Domain.Accounting.AccountingVoucherHeader", b =>
                {
                    b.Navigation("Entries");
                });

            modelBuilder.Entity("Project.Models.Domain.Creation.BalePurchase", b =>
                {
                    b.Navigation("BaleDetails");
                });

            modelBuilder.Entity("Project.Models.Domain.Masters.GroupMaster", b =>
                {
                    b.Navigation("SubGroups");
                });

            modelBuilder.Entity("Project.Models.Domain.Vouchers.StockVoucher", b =>
                {
                    b.Navigation("LineItems");
                });

            modelBuilder.Entity("TexAuto.Models.Domain.Creation.Department", b =>
                {
                    b.Navigation("Machines");
                });

            modelBuilder.Entity("TexAuto.Models.Domain.Entries.Production", b =>
                {
                    b.Navigation("Wastes");
                });
#pragma warning restore 612, 618
        }
    }
}
