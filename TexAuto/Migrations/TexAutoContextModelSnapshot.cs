// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TexAuto.Data;

#nullable disable

namespace TexAuto.Migrations
{
    [DbContext(typeof(TexAutoContext))]
    partial class TexAutoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TexAuto.Models.Domain.Creation.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("TexAuto.Models.Domain.Creation.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("TexAuto.Models.Domain.Creation.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("TypeId");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("TexAuto.Models.Domain.Creation.MachineType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MachineType");
                });

            modelBuilder.Entity("TexAuto.Models.Domain.Creation.WasteType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSellable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ProductionId");

                    b.ToTable("WasteType");
                });

            modelBuilder.Entity("TexAuto.Models.Domain.Entries.Production", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Bale")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Closing")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ConeWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DelHank")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<decimal>("ExpectedProduction")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IdleTime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Lap")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Mixing")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NoOfDoffs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OpeningKgs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ProductIn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ProductOut")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ProductionDrop")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ProductionEfficiency")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RunTime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SliverBreaks")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalProduction")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Productions");
                });

            modelBuilder.Entity("TexAuto.Models.Domain.Entries.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime4")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime4")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalShifts")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("TexAuto.Models.Domain.Entries.Waste", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("WasteTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("WasteTypeId");

                    b.ToTable("Wastes");
                });

            modelBuilder.Entity("TexAuto.Models.Domain.Creation.Machine", b =>
                {
                    b.HasOne("TexAuto.Models.Domain.Creation.Department", null)
                        .WithMany("Machines")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("TexAuto.Models.Domain.Creation.MachineType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("TexAuto.Models.Domain.Creation.WasteType", b =>
                {
                    b.HasOne("TexAuto.Models.Domain.Creation.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("TexAuto.Models.Domain.Entries.Production", null)
                        .WithMany("Wastes")
                        .HasForeignKey("ProductionId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("TexAuto.Models.Domain.Entries.Production", b =>
                {
                    b.HasOne("TexAuto.Models.Domain.Creation.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("TexAuto.Models.Domain.Entries.Waste", b =>
                {
                    b.HasOne("TexAuto.Models.Domain.Creation.WasteType", "WasteType")
                        .WithMany()
                        .HasForeignKey("WasteTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WasteType");
                });

            modelBuilder.Entity("TexAuto.Models.Domain.Creation.Department", b =>
                {
                    b.Navigation("Machines");
                });

            modelBuilder.Entity("TexAuto.Models.Domain.Entries.Production", b =>
                {
                    b.Navigation("Wastes");
                });
#pragma warning restore 612, 618
        }
    }
}
