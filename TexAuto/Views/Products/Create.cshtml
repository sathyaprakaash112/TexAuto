@using TexAuto.Models.Domain.Creation
@model TexAuto.Models.Domain.Creation.Product

@{
    ViewData["Title"] = "Create Product";
}

<h1 class="mb-4 text-dark">Create Product</h1>

<div class="row">
    <div class="col-md-6">
        <div class="card shadow-sm border-0">
            <div class="card-body">
                <form asp-action="Create">
                    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                    <div class="mb-3">
                        <label asp-for="ProductTypeId" class="form-label">Product Type</label>

                        <select asp-for="ProductTypeId" class="form-select form-control" id="productTypeSelect">
                            <option disabled selected value="">-- Select Product Type --</option>
                            @if (ViewBag.ProductTypes is List<ProductType> productTypes)
                            {
                                foreach (var pt in productTypes)
                                {
                                    <option value="@pt.Id" data-dept="@pt.Department?.Name">@pt.Name</option>
                                }
                            }
                        </select>


                    </div>

                    <div class="mb-3">
                        <label asp-for="Name" class="form-label">Product Name</label>
                        <input asp-for="Name" class="form-control" readonly id="ProductName" value="Select a Product Type" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>


                    <div class="mb-3">
                        <label asp-for="Description" class="form-label">Description</label>
                        <input asp-for="Description" class="form-control" />
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="SetHank" class="form-label"></label>
                        <input asp-for="SetHank" class="form-control" />
                        <span asp-validation-for="SetHank" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="NetWeight" class="form-label" value="0.0"></label>
                        <input asp-for="NetWeight" class="form-control" type="number" step="0.01" />
                        <span asp-validation-for="NetWeight" class="text-danger"></span>
                    </div>

                    

                    



                    <div class="d-flex justify-content-between">
                        <button type="submit" class="btn btn-primary">Create</button>
                        <a asp-action="Index" class="btn btn-outline-secondary">Back to List</a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
    .select2-container--default .select2-selection--single {
        height: 38px !important; /* match Bootstrap input height */
        padding: 0.375rem 0.75rem !important;
        font-size: 1rem;
    }

    .select2-container {
        width: 100% !important;
    }
</style>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function () {
            const $select = $('#productTypeSelect');

            // Initialize select2 with department info
            $select.select2({
                width: '100%',
                templateResult: function (option) {
                    if (!option.id) return option.text;

                    const dept = $(option.element).data('dept');
                    return `<div class="d-flex justify-content-between">
                                <span>${option.text}</span>
                                <span class="text-muted ms-2">${dept || ''}</span>
                            </div>`;
                },
                templateSelection: function (option) {
                    const dept = $(option.element).data('dept');
                    return `${option.text} ${dept ? '(' + dept + ')' : ''}`;
                },
                escapeMarkup: markup => markup
            });

            function updateProductName() {
                const productType = $select.find(":selected").text().trim();
                const netWeight = $('#NetWeight').val();
                const hank = $('#SetHank').val();

                let name = productType;
                if (netWeight) name += ` ${netWeight}Kgs`;
                if (hank) name += ` ${hank}`;

                $('#ProductName').val(name.trim());
            }

            // Event bindings
            $select.on('change', updateProductName);
            $('#NetWeight').on('input', updateProductName);
            $('#SetHank').on('input', updateProductName);
        });
    </script>
}
